<%- include('layouts/head.ejs', { title: 'SignUp - Page', css: ['register_page'] }) %>

<main>
    <div class="logo">
        ECHO
    </div>
    <div class="form-wrapper">
        <form id="registerForm">
            <label for="userhandle">Userhandle</label>
            <input type="text" id="userhandle" name="userhandle" placeholder="Userhandle" required><br>
            <label for="email">Email</label>
            <input type="email" id="email" name="email" placeholder="Email" required><br>
            <label for="password">Password</label>
            <input type="password" id="password" name="password" placeholder="Password" required><br>
            <button type="submit" id="submitBtn">Submit</button>
        </form>
    </div>
</main>
<script>
    // Helper function for converting into PEM format

function convertToPEM(buffer, label) {
    const base64 = window.btoa(String.fromCharCode(...new Uint8Array(buffer)));
    
    const lines = base64.match(/.{1,64}/g).join("\n");
    return `-----BEGIN ${label}-----\n${lines}\n-----END ${label}-----`;
}

function bufferToHex(buffer) {
    return [...new Uint8Array(buffer)].map(b => b.toString(16).padStart(2, "0")).join("");
}

document.getElementById("registerForm").addEventListener("submit", async (e) => {

    e.preventDefault()

    try {

        const keyPair = await window.crypto.subtle.generateKey(

            {
                name: "RSA-OAEP",
                modulusLength: 2048,
                publicExponent: new Uint8Array([1, 0, 1]),
                hash: "SHA-256",
            },
            true,
            ["encrypt", "decrypt"],
        );

        const publicKey = await window.crypto.subtle.exportKey("spki", keyPair.publicKey);
        const privateKey = await window.crypto.subtle.exportKey("pkcs8", keyPair.privateKey);

        const publicPem = convertToPEM(publicKey, "Public Key");
        const privatePem = convertToPEM(privateKey, "Private Key");

        const encoder = new TextEncoder();

        const privatePemBuffer = encoder.encode(privatePem);

        const hashedPrivatePem = await window.crypto.subtle.digest("SHA-256", privatePemBuffer);

        localStorage.setItem("PRIVATE_KEY", bufferToHex(hashedPrivatePem));

        const userhandle = document.getElementById("userhandle").value;
        const email = document.getElementById("email").value;
        const password = document.getElementById("password").value;

        await fetch("http://localhost:3000/user/signup", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                userhandle,
                email,
                password,
                publicKey: publicPem,
            })
        });

        location.href = `/chat/${userhandle}`
        
    } catch (error) {
        console.log(error.message)
    }
})
</script>
</body>
</html>